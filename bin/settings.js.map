{"version":3,"sources":["../src/settings.js"],"names":[],"mappings":";;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAG7B,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,WAAW,CAAC;AACtD,IAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;;AAE3C,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,WAAW,CAAC,CAAC;AACrD,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC,CAAC;;;;;;AAMhD,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,IAAI,GAAG,eAAe,CAAC,CAAC;AACpE,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,GAAG,eAAe,CAAC,CAAC;;AAEpD,IAAI,QAAQ,GAAG;AACX,WAAO,EAAE,IAAI;AACb,qBAAiB,EAAE,eAAe;AAClC,eAAW,EAAE,WAAW,CAAC,IAAI;AAC7B,kBAAc,EAAE,WAAW,CAAC,cAAc,IAAI,qBAAqB;AACnE,kBAAc,EAAE,IAAI,CAAC,GAAG,EAAE;AAC1B,qBAAiB,EAAE,aAAa,EAAE,IAAI,SAAS;AAC/C,gBAAY,EAAE,YAAY;AAC1B,UAAM,EAAE,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,SAAS;AAC/C,eAAW,EAAE,cAAc,EAAE,IAAI,SAAS;AAC1C,WAAO,EAAG,UAAU,EAAE,IAAI,KAAK;AAC/B,kBAAc,EAAE,mBAAmB;AACnC,kBAAc,EAAE,iBAAiB;AACjC,aAAS,EAAE,IAAI,GAAG,SAAS;AAC3B,WAAO,EAAE,IAAI,GAAG,kBAAkB;AAClC,cAAU,EAAE,IAAI,GAAG,4BAA4B,GAAG,WAAW,CAAC,IAAI;AAClE,YAAQ,EAAE,WAAW,CAAC,QAAQ,IAAI,SAAS;AAC3C,OAAG,EAAE,WAAW;CACnB,CAAC;;AAGF,SAAS,oBAAoB,GAAG;AAC5B,QAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE;AACxC,eAAO,WAAW,CAAC;KACtB,MAAM;AACH,eAAO,KAAK,CAAC;KAChB;CACJ;;AAED,SAAS,aAAa,GAAG;AACrB,YAAQ,WAAW;AACf,aAAK,WAAW;AAChB,mBAAO,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;;AAAA,AAEjC;AACA,mBAAO,KAAK,CAAC;AAAA,KAChB;CACJ;;AAED,SAAS,cAAc,GAAG;AACtB,YAAQ,WAAW;AACf,aAAK,WAAW;AAChB,mBAAO,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;;AAAA,AAE/B;AACA,mBAAO,KAAK,CAAC;AAAA,KAChB;CACJ;;AAED,SAAS,UAAU,GAAG;AAClB,YAAQ,WAAW;AACf,aAAK,WAAW;AAChB,mBAAO,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;;AAAA,AAEpC;AACA,mBAAO,KAAK,CAAC;AAAA,KAChB;CACJ;;;;AAID,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC","file":"settings.js","sourcesContent":["const path = require('path');\n\n\nconst workingPath = path.dirname(require.main.filename);\nconst ROOT = process.env.ARTEFACT_PATH || workingPath;\nconst ENVIRONMENT = determineEnvironment();\n\nconsole.log(\"Determined running in: \" + ENVIRONMENT);\nconsole.log(\"Root project path set as \" + ROOT);\n\n/*\n * To be valid packageJson,json must at the very least have\n * a name and a cloudformation field.\n */\nconsole.log(\"Reading configuration from \" + ROOT + \"/package.json\");\nconst packageJson = require(ROOT + \"/package.json\");\n\nlet SETTINGS = {\n    rootDir: ROOT,\n    artefactsFilename: \"artifacts.zip\",\n    packageName: packageJson.name,\n    cloudformation: packageJson.cloudformation || \"cloudformation.json\",\n    buildStartTime: Date.now(),\n    projectBranchName: getBranchName() || \"Unknown\",\n    manifestFile: \"build.json\",\n    vcsURL: packageJson.repository.url || \"Unknown\",\n    vcsRevision: getVcsRevision() || \"Unknown\",\n    buildId:  getBuildId() || \"DEV\",\n    artefactBucket: \"riffraff-artifact\",\n    manifestBucket: \"riffraff-builds\",\n    targetDir: ROOT + \"/target\",\n    leadDir: ROOT + \"/target/riffraff\",\n    packageDir: ROOT + \"/target/riffraff/packages/\" + packageJson.name,\n    buildDir: packageJson.buildDir || undefined,\n    env: ENVIRONMENT\n};\n\n\nfunction determineEnvironment() {\n    if (process.env.CIRCLECI && process.env.CI) {\n        return \"circle-ci\";\n    } else {\n        return \"dev\";\n    }\n}\n\nfunction getBranchName() {\n    switch (ENVIRONMENT) {\n        case 'circle-ci':\n        return process.env.CIRCLE_BRANCH;\n\n        default:\n        return \"dev\";\n    }\n}\n\nfunction getVcsRevision() {\n    switch (ENVIRONMENT) {\n        case 'circle-ci':\n        return process.env.CIRCLE_SHA1;\n\n        default:\n        return \"dev\";\n    }\n}\n\nfunction getBuildId() {\n    switch (ENVIRONMENT) {\n        case 'circle-ci':\n        return process.env.CIRCLE_BUILD_NUM;\n\n        default:\n        return \"dev\";\n    }\n}\n\n// build tool specific settings - currently only works for CIRCL_CI\n\nexports.SETTINGS = SETTINGS;\n"]}