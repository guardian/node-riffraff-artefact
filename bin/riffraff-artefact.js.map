{"version":3,"sources":["../src/riffraff-artefact.js"],"names":[],"mappings":"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","file":"riffraff-artefact.js","sourcesContent":["const AWS = require('aws-sdk');\nconst exec = require('child_process').exec;\nconst fs = require('fs');\nconst Q = require('q');\nconst SETTINGS = require('./settings').SETTINGS;\n\nconst log = SETTINGS.verbose ? console.log.bind(console) : function () {};\n\nfunction createDir(dirname) {\n    if(!fs.existsSync(dirname)) {\n        log(\"Creating directory \" + dirname);\n        return Q.promise((resolve, reject) => {\n            fs.mkdir(dirname, (err) => {\n                if (err) {\n                    reject(err);\n                }\n                resolve();\n            });\n        });\n    }\n}\n\nfunction clean() {\n    return Q.promise((resolve, reject) => {\n        log(\"Cleaning target directory...\");\n        let result = (error) =>  {\n            if (error) {\n                console.error(\"Failed deleting with: \" + error.stack);\n                process.exit(1);\n            }\n            return resolve();\n        };\n\n        const commandString = [\"rm -rf\", SETTINGS.leadDir + \"/*\"].join(\" \");\n        exec(commandString, result);\n    });\n}\n\nfunction copyFile(source, target) {\n    return Q.promise((resolve, reject) => {\n        let result = (error) => {\n            if (error) {\n                console.error(\"Failed copying with: \" + error.stack);\n                process.exit(1);\n            }\n            return resolve(target);\n        };\n\n        const commandString = [\"cp\", source, target].join(\" \");\n        exec(commandString, result);\n    });\n}\n\n\nfunction s3Upload() {\n    const s3 = new AWS.S3();\n    const file = SETTINGS.leadDir + \"/\" + SETTINGS.artefactsFilename;\n\n    // build the path\n    const rootPath = [SETTINGS.packageName, SETTINGS.buildId].join(\"/\");\n\n\n    var artefact = Q.promise((resolve, reject) => {\n        const artefactPath = rootPath + \"/\" + SETTINGS.artefactsFilename;\n        log(\"Uploading to \" + artefactPath);\n\n        const stream = fs.createReadStream(file);\n        const params = {\n            Bucket: SETTINGS.artefactBucket,\n            Key: artefactPath,\n            Body: stream,\n            ACL: \"bucket-owner-full-control\"\n        };\n        s3.upload(params, (err) => {\n            if (err) {\n                throw new Error(err);\n            }\n            console.log([\"Uploaded riffraff artefact to\", artefactPath, \"in\",\n                         SETTINGS.artefactBucket].join(\" \"));\n            resolve();\n        });\n    });\n\n\n    // upload the manifest\n    var manifest = Q.promise((resolve, reject) => {\n        const manifestPath = rootPath + \"/\" + SETTINGS.manifestFile;\n        log(\"Uploading to \" + manifestPath);\n\n        s3.upload({\n            Bucket: SETTINGS.manifestBucket,\n            Key: manifestPath,\n            Body: JSON.stringify(buildManifest()),\n            ACL: \"bucket-owner-full-control\"\n        }, (err) => {\n            if (err) {\n                throw err;\n            }\n            console.log([\"Uploaded riffraff manifest to\", manifestPath, \"in\",\n                         SETTINGS.manifestBucket].join(\" \"));\n            resolve();\n        });\n    });\n\n    return Q.all([manifest, artefact]);\n}\n\nfunction createTar() {\n    return Q.promise((resolve, reject) => {\n        const target = SETTINGS.packageDir + '/' + SETTINGS.packageName + '.tgz';\n        const buildDir = SETTINGS.buildDir || (\"*\");\n        log(\"Creating tgz in \" + target);\n\n        let result = (error) => {\n            if (error) {\n                console.error(\"Failed to create tar with: \" + error.stack);\n                process.exit(1);\n            }\n            log(\"Created tgz file in: \", target);\n            return resolve(\"/tmp/\" + SETTINGS.packageName + \".tgz\");\n        };\n\n        const commandString = [\"tar czf\", \"/tmp/\" + SETTINGS.packageName + \".tgz\" ,\n                               buildDir].join(\" \");\n        exec(commandString, result);\n\n    });\n}\n\nfunction moveTarToTarget(tempLocation) {\n    const target = SETTINGS.packageDir + '/' + SETTINGS.packageName + '.tgz';\n    return copyFile(tempLocation, target);\n}\n\nfunction createZip() {\n    // change directory to the target\n    process.chdir(SETTINGS.leadDir);\n    return Q.promise((resolve, reject) => {\n        const FILENAME = SETTINGS.artefactsFilename;\n\n        log(\"Creating zip in ./target/riffraff/\" + FILENAME);\n        let result = (error) => {\n            if (error) {\n                console.error(\"Failed to create zip with: \" + error.stack);\n                process.exit(1);\n            }\n            log(\"Created zip file in ./target/riffraff/\" + FILENAME);\n\n            return resolve(FILENAME);\n        };\n\n        const commandString = [\"zip -r\", FILENAME, \"./*\"].join(\" \");\n        exec(commandString, result);\n    });\n}\n\n\n\nfunction createDirectories() {\n    return Q.all([\n        createDir(SETTINGS.targetDir),\n        createDir(SETTINGS.leadDir),\n        createDir(SETTINGS.leadDir + \"/packages\"),\n        createDir(SETTINGS.leadDir + \"/packages/cloudformation\"),\n        createDir(SETTINGS.packageDir)\n    ]);\n}\n\nfunction cloudformation() {\n    return copyFile(SETTINGS.rootDir + \"/\" + SETTINGS.cloudformation,\n                    SETTINGS.leadDir + '/packages/cloudformation/');\n}\n\nfunction deployJson() {\n    return copyFile(SETTINGS.rootDir + \"/deploy.json\", SETTINGS.leadDir);\n}\n\nfunction buildManifest() {\n    return {\n        branch: SETTINGS.projectBranchName,\n        vcsURL: SETTINGS.vcsURL,\n        revision: SETTINGS.vcsRevision,\n        startTime: SETTINGS.buildStartTime,\n        buildNumber: SETTINGS.buildId,\n        projectName: SETTINGS.packageName\n    };\n}\n\nfunction buildArtefact() {\n    return clean()\n        .then(createDirectories)\n        .then(cloudformation)\n        .then(deployJson)\n        .then(createTar)\n        .then((tmp) => { return moveTarToTarget(tmp); })\n        .then(createZip);\n}\n\nfunction uploadArtefact() {\n    return s3Upload();\n}\n\nfunction determineAction() {\n    if (SETTINGS.env !== \"dev\") {\n        buildArtefact()\n            .then(uploadArtefact)\n            .catch((err) => {\n                throw err;\n            });\n    } else {\n        buildArtefact();\n    }\n}\n\nmodule.exports = {\n    determineAction: determineAction,\n    settings: SETTINGS,\n    buildManifest: buildManifest,\n    s3Upload: s3Upload\n}\n\nif (require.main === module) {\n    determineAction();\n}\n"]}